{"ast":null,"code":"import createStore from \"unistore\";\nimport axios from \"axios\";\nconst initialState = {\n  listBook: [],\n  listPenulis: [],\n  listCategory: [],\n  baseUrl: `http://localhost:5000`,\n  judul: '',\n  penulisId: '',\n  categoryId: '',\n  penulisInput: '',\n  judulInput: '',\n  categoryInput: [],\n  drama: '',\n  action: '',\n  horror: '',\n  comedy: '',\n  romance: ''\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  getBook: state => {\n    const req = {\n      method: \"get\",\n      url: `${state.baseUrl}/book?judul=${state.judul}&penulis_id=${state.penulisId}&category_id=${state.categoryId}`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    axios(req).then(response => {\n      store.setState({\n        listBook: response.data.result\n      });\n    }).catch(error => {});\n  },\n  getPenulis: state => {\n    const req = {\n      method: \"get\",\n      url: `${state.baseUrl}/penulis`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    axios(req).then(response => {\n      store.setState({\n        listPenulis: response.data.result\n      });\n    }).catch(error => {});\n  },\n  getCategory: state => {\n    const req = {\n      method: \"get\",\n      url: `${state.baseUrl}/category`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    axios(req).then(response => {\n      store.setState({\n        listCategory: response.data.result\n      });\n    }).catch(error => {});\n  },\n  deleteBook: (state, id) => {\n    const req = {\n      method: \"delete\",\n      url: `${state.baseUrl}/book/${id}`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    axios(req).then(response => {\n      getBook(state.baseUrl);\n    }).catch(error => {});\n  },\n  addBook: state => {\n    const req = {\n      method: \"post\",\n      url: `${state.baseUrl}/book`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: {\n        judul: state.judulInput,\n        penulis: state.penulisInput,\n        category: [1, 2]\n      }\n    };\n    axios(req).then(response => {\n      getBook(state.baseUrl);\n    }).catch(error => {});\n  }\n});\n\nconst getBook = baseUrl => {\n  const req = {\n    method: \"get\",\n    url: `${baseUrl}/book`,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  axios(req).then(response => {\n    store.setState({\n      listBook: response.data.result\n    });\n  }).catch(error => {});\n};","map":{"version":3,"sources":["/home/agung/ALTA/Tes_kerja/react/src/stores/MainStore.js"],"names":["createStore","axios","initialState","listBook","listPenulis","listCategory","baseUrl","judul","penulisId","categoryId","penulisInput","judulInput","categoryInput","drama","action","horror","comedy","romance","store","actions","getBook","state","req","method","url","headers","then","response","setState","data","result","catch","error","getPenulis","getCategory","deleteBook","id","addBook","penulis","category"],"mappings":"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","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\n\nconst initialState = {\n    listBook : [],\n    listPenulis : [],\n    listCategory : [],\n    baseUrl : `http://localhost:5000`,\n    judul : '',\n    penulisId : '',\n    categoryId : '',\n    penulisInput : '',\n    judulInput:'',\n    categoryInput: [],\n    drama : '',\n    action : '',\n    horror : '',\n    comedy : '',\n    romance : '',\n}\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n    getBook: state => {   \n        const req = {\n          method: \"get\",\n          url: `${state.baseUrl}/book?judul=${state.judul}&penulis_id=${state.penulisId}&category_id=${state.categoryId}`,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        axios(req)\n          .then(response => {\n            store.setState({\n              listBook: response.data.result,\n            });\n          })\n          .catch(error => {});\n      },\n      getPenulis: state => {   \n        const req = {\n          method: \"get\",\n          url: `${state.baseUrl}/penulis`,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        axios(req)\n          .then(response => {\n            store.setState({\n              listPenulis: response.data.result,\n            });\n          })\n          .catch(error => {});\n      },\n      getCategory: state => {   \n        const req = {\n          method: \"get\",\n          url: `${state.baseUrl}/category`,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        axios(req)\n          .then(response => {\n            store.setState({\n              listCategory: response.data.result,\n            });\n          })\n          .catch(error => {});\n      },\n      deleteBook: (state,id) => {   \n        const req = {\n          method: \"delete\",\n          url: `${state.baseUrl}/book/${id}`,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        axios(req)\n          .then(response => {\n            getBook(state.baseUrl)\n          })\n          .catch(error => {});\n      },\n      addBook: (state) => {   \n        const req = {\n          method: \"post\",\n          url: `${state.baseUrl}/book`,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: {\n            judul: state.judulInput,\n            penulis : state.penulisInput,\n            category : [1,2]\n          }\n        };\n        axios(req)\n          .then(response => {\n            getBook(state.baseUrl)\n          })\n          .catch(error => {});\n      },\n});\n\nconst getBook = (baseUrl) => {   \n  const req = {\n    method: \"get\",\n    url: `${baseUrl}/book`,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  axios(req)\n    .then(response => {\n      store.setState({\n        listBook: response.data.result,\n      });\n    })\n    .catch(error => {});\n}"]},"metadata":{},"sourceType":"module"}